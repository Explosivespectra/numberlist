{"version":3,"sources":["numberListItem.js","ListCard.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","listItem","display","closeIcon","NumberListItem","item","checkEvent","closeEvent","isChecked","classes","ListItem","key","divider","className","ListItemIcon","Checkbox","checked","onChange","event","target","ListItemSecondaryAction","IconButton","onClick","list","width","maxWidth","marginTop","maxHeight","margin","overflow","background","subheader","AddDialog","onClose","errorState","errorText","addEvent","dialogOpen","useState","inputValue","setInputVal","handleClose","Dialog","open","DialogTitle","TextField","label","value","error","helperText","isNaN","parseInt","Button","ListCard","unfold","n","items","alterListItems","listOrder","setListOrder","deleteList","alterDeleteList","setErrorState","setErrorMessage","setDialogOpen","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","length","listLength","adjustLength","incrementOrDecrementDeletionList","concat","filter","currItem","deleteItem","Container","fixed","List","ListSubheader","sort","a","b","includes","map","addItem","Snackbar","message","theme","createMuiTheme","palette","primary","main","secondary","red","A400","default","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.345d2108.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { ListItem, ListItemIcon, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport  CloseIcon  from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles({\r\n  listItem: {\r\n    \"&:hover + $closeIcon\": {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  closeIcon: {\r\n    display: \"none\",\r\n    \"&:hover\": {\r\n      display: \"block\"\r\n    }\r\n  },\r\n});\r\n\r\nconst NumberListItem = ({item, checkEvent, closeEvent, isChecked}) => {\r\n const classes = useStyles();\r\n  const sendDeleteItem = () => {\r\n    closeEvent(item);\r\n  };\r\n\r\n  return (\r\n        <ListItem key={item} divider={true} className={classes.listItem}>\r\n          <ListItemIcon>\r\n            <Checkbox checked = {isChecked} onChange={(event) => {checkEvent(event.target.checked, item)}}/>\r\n          </ListItemIcon>\r\n          Number {item}\r\n          <ListItemSecondaryAction className={classes.closeIcon}>\r\n            <IconButton onClick={sendDeleteItem}>\r\n              <CloseIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n  );\r\n};\r\n\r\nexport default NumberListItem;","import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { palette } from '@material-ui/system';\r\n\r\nimport { Container, List, ListSubheader, Dialog, DialogTitle, TextField, Snackbar, Button, IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\nimport { unfold, sort } from \"ramda\";\r\nimport NumberListItem from \"./numberListItem.js\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: '100%',\r\n    maxWidth: 350,\r\n    marginTop: 100,\r\n    maxHeight: 400,\r\n    margin: 'auto',\r\n    overflow: 'auto',\r\n    background: 'inherit',\r\n  },\r\n\r\n  subheader: {\r\n    background: 'primary',\r\n  },\r\n\r\n  listItem: {\r\n    background: 'inherit',\r\n  }\r\n\r\n});\r\n\r\nconst AddDialog = ({onClose, errorState, errorText, addEvent, dialogOpen}) => {\r\n  const [inputValue, setInputVal] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const sendInput = () => {\r\n    addEvent(inputValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={dialogOpen} onClose={handleClose}>\r\n      <DialogTitle>Add a number</DialogTitle>\r\n      <TextField label=\"0-9999\" value={inputValue} error={errorState} helperText={errorText} onChange={(event) => (setInputVal(event.target.value === \"\" ||\r\n      isNaN(event.target.value) ? (event.target.value === \"\" ? \"\" : inputValue) : parseInt(event.target.value)))}/>\r\n      <div>\r\n        <Button onClick={() => {setInputVal(\"\"); handleClose();}}>Cancel</Button>\r\n        <Button onClick={sendInput}>Confirm</Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ListCard = () => {\r\n  const classes = useStyles;\r\n\r\n  const [items, alterListItems] = useState(() =>\r\n    unfold((n) => (n > 100 ? false : [n, n + 1]), 0)\r\n  );\r\n  const [listOrder, setListOrder] = useState(true);\r\n  const [deleteList, alterDeleteList] = useState([]);\r\n  const [errorState, setErrorState] = useState(false);\r\n  const [errorText, setErrorMessage] = useState(\"\");\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState([]);\r\n  const [listLength, adjustLength] = useState(items.length);\r\n\r\n  const incrementOrDecrementDeletionList = (isChecked, item) => {\r\n    if (isChecked) {\r\n      alterDeleteList(deleteList.concat([item]));\r\n    }\r\n    else {\r\n      alterDeleteList(deleteList.filter(currItem => (currItem!==item)));\r\n    }\r\n  };\r\n\r\n  const deleteItem = (item) => {\r\n    alterListItems(items.filter(currItem => (currItem !== item)));\r\n    alterDeleteList(deleteList.filter((currItem) => (currItem !== item)));\r\n    adjustLength(listLength - 1);\r\n  };\r\n\r\n  const deleteMultipleItems = () => {\r\n    alterListItems(items.filter((currItem) => (!deleteList.includes(currItem))));\r\n    adjustLength(listLength - deleteList.length);\r\n    alterDeleteList([]);\r\n  };\r\n\r\n  const addItem = (value) => {\r\n    alterListItems(sort(listOrder ? ((a, b) => (a - b)) : ((a, b) => ((a - b) * -1)), items.concat([value])));\r\n    adjustLength(listLength + 1);\r\n    setSnackbarMessage(\"Number \".concat(value).concat(\" successfully added\"));\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const validateAndAdd = (value) => {\r\n    if (value === \"\" || isNaN(value) || value > 9999 || value < 0) {\r\n\r\n      setErrorMessage(\"Value must be 0-9999\");\r\n      setErrorState(true);\r\n    }\r\n    else {\r\n      if (items.includes(value)) {\r\n        setErrorMessage(\"Value already in list\");\r\n        setErrorState(true);\r\n      }\r\n      else {\r\n        setErrorMessage(\"\");\r\n        setErrorState(false);\r\n        addItem(value);\r\n        setDialogOpen(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reorder = () => {\r\n    alterListItems(sort(!listOrder ? ((a, b) => (a - b)) : ((a, b) => ((a - b) * -1)), items));\r\n    setListOrder(!listOrder);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth={'xs'} fixed={true} className={classes.list}>\r\n        <List>\r\n          <ListSubheader className={classes.subheader}>\r\n            My Numbers ({listLength})\r\n            <IconButton onClick={reorder}>\r\n              <ReorderIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={deleteMultipleItems}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={() => (setDialogOpen(true))}>\r\n              <AddBoxIcon/>\r\n            </IconButton>\r\n          </ListSubheader>\r\n          {items.map((item) => (\r\n            <NumberListItem\r\n              className={classes.listItem}\r\n              key={item}\r\n              item={item}\r\n              checkEvent={incrementOrDecrementDeletionList}\r\n              closeEvent={deleteItem}\r\n              isChecked={deleteList.includes(item)}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Container>\r\n      <AddDialog\r\n        onClose={() => {setDialogOpen(false); setErrorMessage(\"\"); setErrorState(false);}}\r\n        errorState={errorState}\r\n        errorText={errorText}\r\n        addEvent={validateAndAdd}\r\n        dialogOpen={dialogOpen}\r\n      />\r\n      <Snackbar open={snackbarOpen} message={snackbarMessage} onClose={() =>(setSnackbarOpen(false))}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import { red } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    secondary: {\r\n      main: \"#19857b\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport ListCard from \"./ListCard\";\r\nimport theme from \"./theme\";\r\n\r\nconst App = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <ListCard />\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}